# @package _global_

# close to exp16/run1 but with mobilenet like head. GAP first then 3 layers MLP to compensate for small number of features. 
# training with 4 heads for fair comparison with exp16/run2
# + make first activation in each block not in-place (!)

defaults:
  - /base@_here_

model:
  _target_: src.model.CModel
  extra_kwargs:
    NormFreeBlock: {activation: "'swish_hard'", groups_width: 64, alpha: 0.2, gamma: "${init_gamma}", n_heads: 4}

  layer_config:
    - [-1, 1, "pt.modules.SpaceToDepth", 2]  # 0
    - [-1, 1, "scaled_conv3x3", [12, 64], {gamma: "${init_gamma}"}]  # 0
    - [-1, 1, 'torch.nn.Hardswish', [], {inplace: True}]
      # stage 1
    - [-1, 1, "pt.modules.BlurPool", 64]
    - [-1, 1, "NormFreeBlock", [64, 128]]
      # stage 2
    - [-1, 1, "pt.modules.BlurPool", 128]
    - [-1, 1, "NormFreeBlock", [128, 192]]
    - [-1, 1, "NormFreeBlock", [192, 192]]
      # stage 3
    - [-1, 1, "pt.modules.BlurPool", 192]
    - [-1, 1, "NormFreeBlock", [192, 256], {groups_width: 48}]
    - [-1, 5, "NormFreeBlock", [256, 256]]
      # stage 4
    - [-1, 1, "pt.modules.BlurPool", 256]
    - [-1, 1, "NormFreeBlock", [256, 384]]
    - [-1, 4, "NormFreeBlock", [384, 384]]
      # head
    - [-1, 1, "pt.modules.FastGlobalAvgPool2d", [], {flatten: True}]
    - [-1, 1, 'torch.nn.Hardswish', [], {inplace: True}]
    - [-1, 1, "nn.Linear", [384, 1024]]
    # - [-1, 1, "ScaledStdConv2d", [384, 1024, 1], {padding: 1, gamma: "${init_gamma}"}]
    - [-1, 1, 'torch.nn.Hardswish', [], {inplace: True}]
    - [-1, 1, "nn.Linear", [1024, 2560]]
    # - [-1, 1, "ScaledStdConv2d", [1024, 2560, 1], {padding: 1, gamma: "${init_gamma}"}]
    - [-1, 1, 'torch.nn.Hardswish', [], {inplace: True}]
    - [-1, 1, "nn.Linear", [2560, 1000]]

log:
  exp_name: nf-cnet_4-heads_large-head
  histogram: True

# using best found optimizer so far
optim:
  _target_: pytorch_tools.optim.adamw.AdamW
  weight_decay: 1e-3
  eps: 1e-6
  lr: 0

# use label smoothing
criterion:
  smoothing: 0.1

loader:
  image_size: 224
  batch_size: 256
  blur_prob: 0.2
  gray_prob: 0.2
  color_twist_prob: 0.4
  re_prob: 0.3

val_loader:
  # image_size: 224  # for better comparison with R50 runs test on the same resolution. could get slightly better results by testing on 
  image_size: 288 # to test on the same resolution as timm

run:
  stages:
    # no warm-up
    - {start: 0, end: 180, lr: [0.01, 0], lr_mode: cos}

  extra_callbacks:
    - _target_: src.callbacks.CutmixMixup
      cutmix_alpha: 1.0
      mixup_alpha: 0.2
      prob: 0.5
      
filter_from_wd: [gain] # filter bias and gain from wd
init_gamma: 2 # larger value to compensate for variance reduction after BlurPool
