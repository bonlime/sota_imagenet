# @package _global_

# close to exp73 and exp74
# but instead of scaling width + number of first params
# i'm scaling width to 256 directly to get a lot of feature from start

# 23.31M compared to 23.06M in exp74, but trains faster!
# maybe really width > depth at first layers. and random thought - maybe this is one of the reasons Transformers and GENet work well - due to thick head

# idea for the future - check that S2d puts different channels mixed and groups here to compensate for increase in compute
# upd. trains faster, results are worse.... can't conclude anything here really
# [11-12 06:07:22] - Epoch 90 | lr 7.33e-05
# [11-12 06:16:17] - Train loss: 2.8828 | Acc@1: 67.8898 | Acc@5: 85.3998
# [11-12 06:16:17] - Val   loss: 1.9873 | Acc@1: 74.3320 | Acc@5: 91.7860
# [11-12 06:16:17] - Model params: 23.31M
# [11-12 06:16:17] - Acc@1 74.332 Acc@5 91.786
# [11-12 06:16:17] - Total time: 14h 27.6m

defaults:
  - /base@_here_
  
log:
  # exp_name: non-deep_zero_scaled
  exp_name: non-deeps_fat-head_single-layer

  histogram: True
  print_model: True

model:
  _target_: sota_imagenet.model.CModel
  extra_kwargs:
    NonDeepBlock:
      norm: nn.BatchNorm2d
      scaled: True

  layer_config:
    - [-1, 1, pt.modules.SpaceToDepth, 4] # os=4
    # residual starts from the very first layer
    - [-1, 1, NonDeepBlock, [48, 256]]
    - [-1, 1, nn.AvgPool2d, [2, 2]] # os=8
    - [-1, 3, NonDeepBlock, [256, 256]]
    - [-1, 1, nn.AvgPool2d, [2, 2]] # os=16
    - [-1, 1, NonDeepBlock, [256, 384]] # {groups_width: 64}
    - [-1, 8, NonDeepBlock, [384, 384]] # {groups_width: 64}
    - [-1, 1, pt.modules.FastGlobalAvgPool2d, [], {flatten: True}]
    - [-1, 1, nn.Linear, [384, 2048]]
    - [-1, 1, nn.Hardswish]
    - [-1, 1, nn.Linear, [2048, 2048]]
    - [-1, 1, nn.Hardswish]
    - [-1, 1, nn.Linear, [2048, 1000]]

# using default SGD
optim:
  _target_: torch.optim._multi_tensor.SGD
  momentum: 0.9
  weight_decay: 3e-5
  lr: 0

# optim:
#   # in PyTorch implementation weight decay is lr * wd, so 0.1 == 1e-4 as in AdamW paper
#   _target_: src.optimizers.AdamLayerwise
#   weight_decay: 1e-2
#   betas: [0.9, 0.995]
#   lr: 0

# use label smoothing
criterion:
  smoothing: 0.1

loader:
  image_size: 224
  batch_size: 224
  blur_prob: 0.2
  gray_prob: 0.2
  color_twist_prob: 0.4
  re_prob: 0.3

val_loader:
  image_size: 288 # to test on the same resolution as timm

run:
  stages:
    # SGD requires warmup
    - {start: 0, end: 3, lr: [0.001, 0.1]}
    - {start: 3, end: 90, lr: [0.1, 0], lr_mode: cos}

  extra_callbacks:
    - _target_: sota_imagenet.callbacks.CutmixMixup
      cutmix_alpha: 1.0
      mixup_alpha: 0.2
      prob: 1.0

filter_from_wd: [gain] # filter bias and gain from wd
init_gamma: 1.7 # larger value to compensate for variance reduction after BlurPool
